/*
 * This file is generated by jOOQ.
 */
package com.alex.simple.process.jooq.tables.pojos;


import org.jooq.JSONB;

import javax.annotation.Generated;
import java.io.Serializable;
import java.util.UUID;


/**
 * Таблица хранит данные процессов
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.1"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class JProcesses implements Serializable {

    private static final long serialVersionUID = -2100013360;

    private UUID uuid;
    private String processType;
    private JSONB context;
    private Integer retryCount;

    public JProcesses() {
    }

    public JProcesses(JProcesses value) {
        this.uuid = value.uuid;
        this.processType = value.processType;
        this.context = value.context;
        this.retryCount = value.retryCount;
    }

    public JProcesses(
            UUID uuid,
            String processType,
            JSONB context,
            Integer retryCount
    ) {
        this.uuid = uuid;
        this.processType = processType;
        this.context = context;
        this.retryCount = retryCount;
    }

    public UUID getUuid() {
        return this.uuid;
    }

    public void setUuid(UUID uuid) {
        this.uuid = uuid;
    }

    public String getProcessType() {
        return this.processType;
    }

    public void setProcessType(String processType) {
        this.processType = processType;
    }

    public JSONB getContext() {
        return this.context;
    }

    public void setContext(JSONB context) {
        this.context = context;
    }

    public Integer getRetryCount() {
        return this.retryCount;
    }

    public void setRetryCount(Integer retryCount) {
        this.retryCount = retryCount;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("JProcesses (");

        sb.append(uuid);
        sb.append(", ").append(processType);
        sb.append(", ").append(context);
        sb.append(", ").append(retryCount);

        sb.append(")");
        return sb.toString();
    }
}
